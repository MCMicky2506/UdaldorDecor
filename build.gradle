import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

ext.env = System.getenv()
ext.cclVersion = "1.1.1.81"

version = "0.0.4"
group = "com.micky.udaldordecor"
archivesBaseName = "UdaldorDecor-1.7.2"

if (env.BUILD_NUMBER != null) {
    version += "-snapshot-" + env.BUILD_NUMBER
}

minecraft {
    version = "1.7.2-10.12.2.1147"
    assetDir = "eclipse/assets"
    
    replaceIn "lib/Reference.java"
    replace "@VERSION@", project.version
}

//repositories {
//    mavenCentral()
//    maven {
//        name = "chickenbones"
//        url = "http://chickenbones.net/maven"
//    }
//    maven {
//        name = "ic2"
//        url = "http://maven.ic2.player.to/"
//    }
//    maven {
//        name "waila"
//        url "http://mobiusstrip.eu/maven"
//    }
//}

//dependencies {
    //compile "codechicken:ForgeMultipart:1.7.2-1.1.0.275:dev"
    //compile "com.mod-buildcraft:buildcraft:6.0.8:dev"
    //compile "net.industrial-craft:industrialcraft-2:2.1.470-experimental:api"
    //compile "mcp.mobius.waila:Waila:1.5.2a"
//}

//apply from: 'downloader.gradle'

//addGitDep("cofh","https://github.com/CoFH/CoFHLib.git","9e3f3445d33a03b82a4deb007db6d6e35d609762")
//addGitDep("ee3","https://github.com/pahimar/Equivalent-Exchange-3.git","8c7c4ed9c6fd0b1809d70351bdb7f14e1d451494")
//addGitDep("ic","https://github.com/progwml6/ironchest.git","9a87528223250caa19651b64f7bab0f225c58564")
//addZipDep("it","http://build.technicpack.net/job/Inventory-Tweaks/116/artifact/build/libs/InventoryTweaks-api-1.57-116.jar","157")
//addHgDep("jabba","https://bitbucket.org/ProfMobius/jabba","0ca5fc6ff9d390ee205a7d6ec8fb80b6306c95d6")

//compileApiJava.dependsOn(getDeps)

afterEvaluate {
//    sourceMainJava.dependsOn(getDeps)
}

//sourceSets {
  //  api {
  //      java {
  //          srcDir 'build/deps/cofh/src/main/java'
  //          include 'cofh/api/**'
  //          
  //          srcDir 'build/deps/ee3/src/main/java'
  //          include 'com/**'
  //          
  //          srcDir 'build/deps/jabba/src/main/java'
  //          include 'mcp/**'
  //          include 'powercrystals/**'
  //          
  //          srcDir 'build/deps/ic/src/main/java'
  //          include 'cpw/**'
  //          
  //          srcDir 'build/deps/it'
  //          include 'invtweaks/**'
  //      }
  //  }
//}

processResources {
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        include 'dependancies.info'
                
        // replace version and mcversion
        filter(ReplaceTokens, tokens: [VERSION: project.version, MCVERSION: project.minecraft.version, CCLVERSION: project.cclVersion])
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
        exclude 'dependancies.info'
    }
}

jar {
    manifest {
        attributes("FMLCorePlugin": "com.dynious.refinedrelocation.asm.LoadingPlugin", "FMLCorePluginContainsFMLMod": "true")
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
	
    manifest {
        //attributes("FMLCorePlugin": "com.dynious.refinedrelocation.asm.LoadingPlugin", "FMLCorePluginContainsFMLMod": "true")
    }
}

//task apiZip(type: Zip) {
    //from(sourceSets.main.java) {
        //include 'com/dynious/refinedrelocation/api/**'
    //}
    //destinationDir = file 'build/lib'
    //classifier = 'api'
//}

//apiZip.mustRunAfter(jar)

artifacts {
    //archives deobfJar
    //archives apiZip
}
